!function(t,e){t.getElementById("livereloadscript")||((e=t.createElement("script")).async=1,e.src="//"+(window.location.host||"localhost").split(":")[0]+":35729/livereload.js?snipver=1",e.id="livereloadscript",t.getElementsByTagName("head")[0].appendChild(e))}(window.document),function(t){"function"==typeof define&&define.amd?define(t):t()}((function(){"use strict";!function(t,e){void 0===e&&(e={});var n=e.insertAt;if(t&&"undefined"!=typeof document){var o=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css","top"===n&&o.firstChild?o.insertBefore(r,o.firstChild):o.appendChild(r),r.styleSheet?r.styleSheet.cssText=t:r.appendChild(document.createTextNode(t))}}(":root {\r\n\t--menu-function-item-height: 26px;\r\n\t--menu-function-item-whitespace: 26px;\r\n\r\n\t--menu-background-color: #999;\r\n\t--menu-frontground-color: #DDD;\r\n\t--menu-active-background-color: #66F;\r\n\t--menu-active-frontground-color: #fff;\r\n\t--menu-disabled-background-color: 'transparent';\r\n\t--menu-disabled-frontground-color: #999;\r\n\r\n\t--menu-outline-color: #000;\r\n\r\n\t--menu-spearator-color: #ccc;\r\n\t--menu-spearator-whitespace-x: 13px;\r\n\t--menu-whitespace-y: 5px;\r\n}\r\n\r\n");const t=document;function e(t,e,n){t.addEventListener(e,n)}function n(e){return t.createElement(e)}function o(t,...e){for(const n of e)for(const e in n)t.style.setProperty(e,n[e])}function r(t,e){t.className=e}function s(t,e){t.appendChild(e)}function c(t,...e){t.classList.add(...e)}function i(t,e=null){const n=new Event(t,{bubbles:!0});return n.data=e,n}function a(t,e){t.dispatchEvent(e)}const l={display:"block",position:"static","box-sizing":"border-box","border-width":"1px","border-color":"transparent"},d={position:"relative",display:"flex"};class u{constructor(){const t=n("li"),e=n("a");s(t,e),o(t,l),o(e,d),r(t,"menu-item"),this[0]=t,this[1]=e}}const p="function-item-height",h="function-item-whitespace",m="frontground-color",f="whitespace-y";const b=(g="menu",function(t){return`var(--${g}-${t})`});var g;const x={position:"absolute",height:"100%",width:b(h)},w={cursor:"pointer",color:b(m),"background-color":"transparent"},v={color:b("active-frontground-color"),"background-color":b("active-background-color")},y={color:b("disabled-frontground-color"),"background-color":"transparent"},k={height:b(p)},E={display:"none"},C={"flex-grow":"1",padding:`0 ${b(h)}`};class T extends u{constructor(){super();const t=this[1],c=n("span"),l=n("span");r(c,"menu-item-label"),r(l,"menu-item-icon"),o(c,C),o(t,k),o(l,E),s(t,l),s(t,c),this[3]=c,c.innerText="Text 4 test";const d=this[0];e(d,"mouseover",(()=>{a(d,i("-focus",this))})),this[5]()}5(){o(this[0],w),function(t,...e){t.classList.remove(...e)}(this[0],"focus")}4(){o(this[0],v),c(this[0],"focus")}6(){o(this[0],y)}}const $={top:0,left:0};class B extends T{constructor(t){super();const c=this[1],i=n("span"),a=n("span");r(i,"menu-item-accelerator"),r(a,"menu-item-checkbox"),o(i,C),o(a,x,$),s(c,i),s(c,a),e(this[0],"click",(()=>{}))}}const L={right:0,top:0};class N extends T{constructor(){super();const t=n("span");o(t,x,L),c(t,"menu-item-expanding"),s(this[1],t)}}const D={display:"block","border-bottom-width":"1px","border-bottom-style":"solid","border-bottom-color":b("spearator-color"),margin:`${b(f)} ${b("spearator-whitespace-x")}`};class z extends u{constructor(){super();const t=this[0];o(this[1],D),e(t,"mouseover",(()=>{a(t,i("-clear-focus",this))}))}}const P={display:"block",position:"fixed",margin:"0",padding:`${b(f)} 0`,"font-size":"12px","white-space":"nowrap","border-width":"1px","border-style":"solid","line-height":b(p),"border-color":"transparent","background-color":b("background-color"),color:b(m),"user-select":"none"},S="a";class j{constructor(){const t=n("ul"),s=[];function c(){s.filter((t=>!(t instanceof z))).forEach((t=>t[5]()))}o(t,P),r(t,"menu"),this.l=s,this.e=t,e(t,"-focus",(t=>{t.stopPropagation(),c(),t.data[4]()})),e(t,"mouseleave",c),e(t,"-clear-focus",c)}s(){s(t.body,this.e)}c(){var e,n;e=t.body,n=this.e,e.removeChild(n)}[S](t){this.l.push(t),s(this.e,t[0])}n(t=null){}p(t=null){}}window.addEventListener("load",(function(){const t=new j,e=new B,n=new N,o=new N,r=new z;t.a(e),t.a(n),t.a(r),t.a(o),t.e.style.minWidth="200px",t.s()}))}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
