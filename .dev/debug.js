!function(t,e){t.getElementById("livereloadscript")||((e=t.createElement("script")).async=1,e.src="//"+(window.location.host||"localhost").split(":")[0]+":35729/livereload.js?snipver=1",e.id="livereloadscript",t.getElementsByTagName("head")[0].appendChild(e))}(window.document),function(t){"function"==typeof define&&define.amd?define(t):t()}((function(){"use strict";!function(t,e){void 0===e&&(e={});var n=e.insertAt;if(t&&"undefined"!=typeof document){var o=document.head||document.getElementsByTagName("head")[0],s=document.createElement("style");s.type="text/css","top"===n&&o.firstChild?o.insertBefore(s,o.firstChild):o.appendChild(s),s.styleSheet?s.styleSheet.cssText=t:s.appendChild(document.createTextNode(t))}}(":root {\r\n\t--menu-function-item-height: 26px;\r\n\t--menu-function-item-whitespace: 26px;\r\n\r\n\t--menu-background-color: #999;\r\n\t--menu-frontground-color: #DDD;\r\n\t--menu-active-background-color: #66F;\r\n\t--menu-active-frontground-color: #fff;\r\n\t--menu-disabled-background-color: 'transparent';\r\n\t--menu-disabled-frontground-color: #999;\r\n\r\n\t--menu-outline-color: #000;\r\n\r\n\t--menu-spearator-color: #ccc;\r\n\t--menu-spearator-whitespace-x: 13px;\r\n\t--menu-whitespace-y: 5px;\r\n}\r\n\r\nspan.menu-item-expanding::before {\r\n\tcontent: '>';\r\n}");const t=document,e=window;function n(t,e,n){t.addEventListener(e,n)}function o(e){return t.createElement(e)}function s(t,...e){for(const n of e)for(const e in n)t.style.setProperty(e,n[e])}function i(t,e){t.appendChild(e)}function r(t,...e){t.classList.add(...e)}function c(t,e=null){const n=new Event(t,{bubbles:!0});return n.data=e,n}function a(t,e){t.dispatchEvent(e)}const l={display:"block",position:"static","box-sizing":"border-box","border-width":"1px","border-color":"transparent"},u={position:"relative",display:"flex"};class d{constructor(){const t=o("li"),e=o("a");i(t,e),s(t,l),s(e,u),r(t,"menu-item"),this.e=t,this.t=e}}const h="function-item-height",p="function-item-whitespace",m="frontground-color",f="whitespace-y";const g=(w="menu",function(t){return`var(--${w}-${t})`});var w;const b={position:"absolute",height:"100%",width:g(p)},x="f",y="r",v={cursor:"pointer",color:g(m),"background-color":"transparent"},k={color:g("active-frontground-color"),"background-color":g("active-background-color")},C={color:g("disabled-frontground-color"),"background-color":"transparent"},E={height:g(h)},A={display:"none"},F={"flex-grow":"1",padding:`0 ${g(p)}`};class $ extends d{constructor(t,e){super();const l=this.t,u=o("span"),d=o("span");r(u,"menu-item-label"),r(d,"menu-item-icon"),s(u,F),s(l,E),s(d,A),i(l,d),i(l,u),this.l=u,this.F=!1,u.innerText="Text 4 test";const h=this.e;s(h,v),n(h,"mouseenter",(()=>{a(h,c("-focus",this))}))}[y](){s(this.e,v),function(t,...e){t.classList.remove(...e)}(this.e,"focus"),this.F=!1}[x](){this.F||(s(this.e,k),r(this.e,"focus"),this.F=!0)}d(){s(this.e,C)}}const L={top:0,left:0};class T extends ${constructor(t){super();const l=this.t,u=o("span"),d=o("span");r(u,"menu-item-accelerator"),r(d,"menu-item-checkbox"),s(u,F),s(d,b,L),i(l,u),i(l,d),n(this.e,"click",(()=>{a(e,c("menu::-close"))}))}}const B={display:"block",position:"fixed",margin:"0",padding:`${g(f)} 0`,"font-size":"12px","white-space":"nowrap","border-width":"1px","border-style":"solid","line-height":g(h),"border-color":"transparent","background-color":g("background-color"),color:g(m),"user-select":"none",opacity:0,"transition-property":"opacity","transition-duration":"0.3s"},D="A",N="Cf";class O{constructor(){const t=this,e=o("ul");s(e,B),r(e,"menu"),this.i=[],this.m=e,this.k=!1,this.f=null,this.c=()=>this.C();const i=()=>{this.f=null,this.Cf()};n(e,"-focus",(e=>t.F(e.data))),n(e,"-keeping",(()=>this.k=!0)),n(e,"-clear-all",i),n(e,"mouseleave",i)}F(t){this.k=!1,this.f=t,this.Cf(),t.f()}[N](){this.k||this.i.filter(I).filter((t=>t!==this.f)).forEach((t=>t.r()))}O(){i(t.body,this.m),requestAnimationFrame((()=>s(this.m,{opacity:1}))),n(e,"menu::-close",this.c)}C(){var n,o,i;this.k=!1,this.f=null,this.Cf(),n=e,o="menu::-close",i=this.c,n.removeEventListener(o,i),function(t,e){t.removeChild(e)}(t.body,this.m),s(this.m,{opacity:0})}[D](t){this.i.push(t),i(this.m,t.e)}N(t=null,e=!1){const n=this.i.filter(I);e&&n.reverse();const o=n.findIndex(z),s=n.length;for(let e=1;e<s-1;e++){const i=n[(o+e)%s];if(null===t||i.symbol===t)return this.F(i)}}}const z=t=>t.F,I=t=>t instanceof $,S={right:0,top:0};class j extends ${constructor(t){super();const e=o("span");s(e,b,S),r(e,"menu-item-expanding"),i(this.t,e),this.sm=t,this.p=!1}[x](){super.f(),this.p||(this.p=!0,this.sm.O(),a(this.e,c("-keeping",this)))}[y](){super.r(),this.p&&(this.sm.C(),this.p=!1)}}const q={display:"block",border:`1px solid ${g("spearator-color")}`,margin:`${g(f)} ${g("spearator-whitespace-x")}`};class P extends d{constructor(){super();const t=this.e;s(this.t,q),n(t,"mouseover",(()=>{a(t,c("-clear-all",this))}))}static is(t){return t instanceof this}}n(e,"mousedown",(function(){a(e,c("menu::-close"))})),window.addEventListener("load",(function(){const t=window.m=new O,e=new O,n=new T,o=new P,s=new T;e.A(n),e.A(o),e.A(s);const i=new T,r=new j(e),c=new T,a=new P;t.A(i),t.A(r),t.A(a),t.A(c),t.m.style.minWidth="200px",window.addEventListener("contextmenu",(e=>{e.preventDefault(),t.O(),console.log(t)}))}))}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
