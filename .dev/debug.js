!function(t,e){t.getElementById("livereloadscript")||((e=t.createElement("script")).async=1,e.src="//"+(window.location.host||"localhost").split(":")[0]+":35729/livereload.js?snipver=1",e.id="livereloadscript",t.getElementsByTagName("head")[0].appendChild(e))}(window.document),function(t){"function"==typeof define&&define.amd?define(t):t()}((function(){"use strict";!function(t,e){void 0===e&&(e={});var n=e.insertAt;if(t&&"undefined"!=typeof document){var o=document.head||document.getElementsByTagName("head")[0],s=document.createElement("style");s.type="text/css","top"===n&&o.firstChild?o.insertBefore(s,o.firstChild):o.appendChild(s),s.styleSheet?s.styleSheet.cssText=t:s.appendChild(document.createTextNode(t))}}(":root {\r\n\t--menu-function-item-height: 26px;\r\n\t--menu-function-item-whitespace: 26px;\r\n\r\n\t--menu-background-color: #999;\r\n\t--menu-frontground-color: #DDD;\r\n\t--menu-active-background-color: #66F;\r\n\t--menu-active-frontground-color: #fff;\r\n\t--menu-disabled-background-color: 'transparent';\r\n\t--menu-disabled-frontground-color: #999;\r\n\r\n\t--menu-outline-color: #000;\r\n\r\n\t--menu-spearator-color: #ccc;\r\n\t--menu-spearator-whitespace-x: 13px;\r\n\t--menu-whitespace-y: 5px;\r\n}\r\n\r\nspan.menu-item-expanding::before {\r\n\tcontent: '>';\r\n}");const t=document,e=window;function n(t,e,n){t.addEventListener(e,n)}function o(t,e,n){t.removeEventListener(e,n)}function s(e){return t.createElement(e)}function i(t,...e){for(const n of e)for(const e in n)t.style.setProperty(e,n[e])}function r(t,e){t.appendChild(e)}function c(t,...e){t.classList.add(...e)}function l(t,e=null){const n=new Event(t,{bubbles:!0});return n.data=e,n}function a(t,e){t.dispatchEvent(e)}const h={display:"block",position:"static","box-sizing":"border-box","border-width":"1px","border-color":"transparent"},u={position:"relative",display:"flex"};class d{constructor(){const t=s("li"),e=s("a");r(t,e),i(t,h),i(e,u),c(t,"menu-item"),this.e=t,this.t=e}}const p="function-item-height",m="function-item-whitespace",f="frontground-color",w="whitespace-y";const g=(y="menu",function(t){return`var(--${y}-${t})`});var y;const k={position:"absolute",height:"100%",width:g(m)},b="f",x="r",v={cursor:"pointer",color:g(f),"background-color":"transparent"},E={color:g("active-frontground-color"),"background-color":g("active-background-color")},C={color:g("disabled-frontground-color"),"background-color":"transparent"},A={height:g(p)},L={display:"none"},F={"flex-grow":"1",padding:`0 ${g(m)}`};class $ extends d{constructor(t,e){super();const n=this.t,o=s("span"),h=s("span");c(o,"menu-item-label"),c(h,"menu-item-icon"),i(o,F),i(n,A),i(h,L),r(n,h),r(n,o),this.l=o,this.F=!1,o.innerText="Text 4 test";const u=this.e;i(u,v),this.L((()=>{a(u,l("-focus",this))}))}L(t){n(this.e,"mouseenter",t)}[x](){i(this.e,v),function(t,...e){t.classList.remove(...e)}(this.e,"focus"),this.F=!1}[b](){this.F||(i(this.e,E),c(this.e,"focus"),this.F=!0)}d(){i(this.e,C)}}const N={top:0,left:0};class T extends ${constructor(t){super();const e=this.t,o=s("span"),l=s("span");c(o,"menu-item-accelerator"),c(l,"menu-item-checkbox"),i(o,F),i(l,k,N),r(e,o),r(e,l),n(this.e,"click",D)}}function D(){a(e,l("menu::-close"))}const R={display:"block",position:"fixed",margin:"0",padding:`${g(w)} 0`,"font-size":"12px","white-space":"nowrap",border:"1px solid transparent","line-height":g(p),"background-color":g("background-color"),color:g(f),"user-select":"none",opacity:0,"transition-property":"opacity","transition-duration":"0.3s"},B="A",K="R";class O{constructor(){const t=this,e=s("ul");i(e,R),c(e,"menu"),this.l=[],this.m=e,this.k=!1,this.f=null,this.lC=()=>this.C(),this.lK=t=>{this.k||("ArrowUp"===t.key?this.N(null,!0):"ArrowDown"===t.key&&this.N())};const o=()=>{this.f=null,this.R()};n(e,"-focus",(e=>t.F(e.data))),n(e,"-keeping",(()=>this.k=!0)),n(e,"-resume",(()=>this.k=!1)),n(e,"-clear-all",o),n(e,"mouseleave",o),n(e,"mousedown",P)}F(t){this.k=!1,this.f=t,this.R(),t.f()}[K](){this.k||this.l.filter(I).filter((t=>t!==this.f)).forEach((t=>t.r()))}O(){n(e,"menu::-close",this.lC),n(e,"keydown",this.lK),requestAnimationFrame((()=>i(this.m,{opacity:1}))),r(t.body,this.m)}C(){var n,s;n=t.body,s=this.m,n.removeChild(s),this.k=!1,this.f=null,this.R(),o(e,"menu::-close",this.lC),o(e,"keydown",this.lK),i(this.m,{opacity:0})}[B](t){this.l.push(t),r(this.m,t.e)}get s(){return null!==this.m.parentElement}N(t=null,e=!1){if(!this.s)return;const n=this.l.filter(I);e&&n.reverse();const o=n.findIndex(z),s=n.length;for(let e=0;e<s-1;e++){const i=n[(o+e+1)%s];if(null===t||i.symbol===t)return this.F(i)}}}const z=t=>t.F,I=t=>t instanceof $,P=t=>t.stopPropagation(),S={right:0,top:0};class j extends ${constructor(t){super();const e=s("span");i(e,k,S),c(e,"menu-item-expanding"),r(this.t,e),this.sm=t,this.p=!1,this.kL=t=>{"ArrowRight"===t.key?this.E():"ArrowLeft"===t.key&&this.C()},this.L((()=>this.E()))}E(){this.p||(this.p=!0,this.sm.O(),a(this.e,l("-keeping",this)))}C(){this.p&&(this.sm.C(),this.p=!1,a(this.e,l("-resume",this)))}[b](){super.f(),n(e,"keydown",this.kL)}[x](){super.r(),this.C(),o(e,"keydown",this.kL)}}const q={display:"block","border-bottom":`1px solid ${g("spearator-color")}`,margin:`${g(w)} ${g("spearator-whitespace-x")}`};class U extends d{constructor(){super();const t=this.e;i(this.t,q),n(t,"mouseover",(()=>{a(t,l("-clear-all",this))}))}}n(e,"mousedown",D),window.addEventListener("load",(function(){const t=window.m=new O,e=new O,n=new T,o=new U,s=new T;e.A(n),e.A(o),e.A(s);const i=new T,r=new j(e),c=new T,l=new U;t.A(i),t.A(r),t.A(l),t.A(c),t.m.style.minWidth="200px",window.addEventListener("contextmenu",(e=>{e.preventDefault(),t.O(),console.log(t)}))}))}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
